// Generated by CoffeeScript 1.4.0
(function() {
  var CRUD, db, getOnce, mongojs, operations;

  mongojs = require('mongojs');

  db = mongojs('guti');

  getOnce = function(params, callBack) {
    var kind, query;
    kind = params.rKind;
    query = {
      _id: mongojs.ObjectId(params.rId)
    };
    return db.collection(kind).findOne(query, function(err, it) {
      return callBack(it);
    });
  };

  operations = {};

  operations.Get = function(params, callBack) {
    return getOnce(params, callBack);
  };

  operations.Query = function(params, callBack) {
    return db.collection(params.rKind).find(function(err, it) {
      return callBack(it);
    });
  };

  operations.Edit = function(params, callBack) {
    return getOnce(params, function(it) {
      if (it) {
        return db.collection(params.rKind).save(it, function(err) {
          if (!err) {
            return getOnce(params, function(it) {
              return callBack(it);
            });
          } else {
            return callBack(err);
          }
        });
      } else {
        return callBack("err");
      }
    });
  };

  operations.Delete = function(params, callBack) {
    var kind, query;
    kind = params.rKind;
    query = {
      _id: mongojs.ObjectId(params.rId)
    };
    return db.collection(kind).findOne(query, function(err, it) {
      if (it) {
        return db.collection(kind).remove({
          _id: it._id
        }, function(err, res) {
          return callBack(res);
        });
      } else {
        return callBack(it);
      }
    });
  };

  CRUD = {};

  CRUD.operation = function(anOperation) {
    return operations[anOperation];
  };

  module.exports = CRUD;

}).call(this);
